<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<160>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="axi_port_fixed_point/mem_streaming.cpp" line="9" pragmaType="interface" parentfunction="mem_streaming" mode="m_axi" port="data_in" bundle="in" offset="slave" name="" depth="-1" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="axi_port_fixed_point/mem_streaming.cpp" line="10" pragmaType="interface" parentfunction="mem_streaming" mode="m_axi" port="data_out" bundle="out" offset="slave" name="" depth="-1" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="axi_port_fixed_point/mem_streaming.cpp" line="11" pragmaType="interface" parentfunction="mem_streaming" mode="s_axilite" port="" bundle="" offset="-1" name="" clock="" impl="" register="1"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>::RType<($_0)32, ($_0)32, true>::div operator/<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<16, false>::ap_int_base<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>(af_range_ref<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<160, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base<17, 5, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<17, 5, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<160, false>::ap_range_ref(ap_int_base<160, false>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="af_range_ref<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>::af_range_ref(ap_fixed_base<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<16, 4, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<17, 5, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<17, 5, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>::RType<32, 32, true>::div ap_fixed_base<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator/<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<160, false>::ap_int_base<160, false>(ap_range_ref<160, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="E:/Vivado/Vitis_HLS/2023.2/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<16, true>::ssdm_int(short)" off="0" region="0" recursive="0"/>
<pragma file="E:/Vivado/Vitis_HLS/2023.2/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi160ELb0EEC2EDq160_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<160, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<17, 5, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<17, 5, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<17, 5, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<17, 5, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<160, false>& ap_range_ref<160, false>::operator=<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>(af_range_ref<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="af_range_ref<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>& af_range_ref<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<160, false>(ap_int_base<160, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<17, 5, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<17, 5, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="af_range_ref<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>& af_range_ref<16, 4, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<160, false>(ap_range_ref<160, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="report" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<160, false>& ap_range_ref<160, false>::operator=<16, false>(ap_int_base<16, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
</pragmas>
